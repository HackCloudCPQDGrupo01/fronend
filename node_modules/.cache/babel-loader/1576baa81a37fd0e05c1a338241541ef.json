{"ast":null,"code":"var _jsxFileName = \"/l/disk0/raphaelg/Downloads/HACKACLOUD/git/grupo01/fronend/src/pages/listapedidosdorestaurante.js\";\nimport Menu from './menu.js';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport '../css/cpedido.css';\nimport '../css/index.css';\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { format } from 'date-fns';\nimport * as constants from './constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst idUsuarioCorrente = localStorage.getItem('idLoggedUser');\nconst username = constants.USUARIO_REST_OIC;\nconst password = constants.PASSWORD_REST_OIC;\nconst basicAuth = btoa(`${username}:${password}`);\nconst headers = {\n  'Content-Type': 'application/json',\n  'Access-Control-Allow-Origin': '*',\n  'Authorization': `Basic ${basicAuth}`\n};\nexport default class Restaurant extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pedido: [{}]\n    };\n    axios.get(constants.URI_PEDIDOS_RESTAURANTE + localStorage.getItem('idLoggedUser'), {\n      headers\n    }).then(res => {\n      this.setState({\n        pedido: res.data.items\n      });\n    });\n  }\n\n  submitPedido(e) {\n    e.preventDefault();\n    alert(JSON.stringify(this.state.pedido[e.target.value].id));\n    const novoObjetoJSON = {\n      \"idPedido\": this.state.pedido[e.target.value].id + \"\"\n    };\n    axios.post(constants.URI_CANCELA_PEDIDO, novoObjetoJSON, {\n      headers\n    }).then(response => {\n      console.log('Resposta da solicitação POST:', response.data);\n      alert('Pedido cancelado com sucesso.');\n      window.location.href = \"/home\";\n    }).catch(error => {\n      console.error('Erro na solicitação POST:', error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: {\n              span: 12,\n              offset: 0\n            },\n            children: this.state.pedido.map((pedido, index) => {\n              return /*#__PURE__*/_jsxDEV(Card, {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: [\"Pedido: \", pedido.id]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 35\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Cliente:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 37\n                    }, this), \" \", pedido.nomecliente, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Prato:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 37\n                    }, this), \" \", pedido.nome, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Valor:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 37\n                    }, this), \" \", pedido.preco, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 91,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Data:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 37\n                    }, this), \" \", pedido.data_prato, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Status:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 37\n                    }, this), \" \", pedido.status]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 35\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 35\n                  }, this), (pedido.status == \"Aguardando análise\" || pedido.status == '') && /*#__PURE__*/_jsxDEV(Button, {\n                    style: {\n                      backgroundColor: \"#FF0000\"\n                    },\n                    variant: \"primary\",\n                    value: index,\n                    onClick: this.submitPedido.bind(this),\n                    children: \"Cancelar Pedido\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 35\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 33\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 1\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/l/disk0/raphaelg/Downloads/HACKACLOUD/git/grupo01/fronend/src/pages/listapedidosdorestaurante.js"],"names":["Menu","Card","Button","Container","Row","Col","React","Component","axios","format","constants","idUsuarioCorrente","localStorage","getItem","username","USUARIO_REST_OIC","password","PASSWORD_REST_OIC","basicAuth","btoa","headers","Restaurant","constructor","props","state","pedido","get","URI_PEDIDOS_RESTAURANTE","then","res","setState","data","items","submitPedido","e","preventDefault","alert","JSON","stringify","target","value","id","novoObjetoJSON","post","URI_CANCELA_PEDIDO","response","console","log","window","location","href","catch","error","render","span","offset","map","index","nomecliente","nome","preco","data_prato","status","backgroundColor","bind"],"mappings":"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","sourcesContent":["import Menu from './menu.js';\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport '../css/cpedido.css';\nimport '../css/index.css';\nimport React,{Component} from 'react';\nimport axios from \"axios\";\nimport { format } from 'date-fns';\nimport * as constants from './constants';\n\n\n    const idUsuarioCorrente = localStorage.getItem('idLoggedUser');\n    const username = constants.USUARIO_REST_OIC;\n    const password = constants.PASSWORD_REST_OIC;\n    const basicAuth = btoa(`${username}:${password}`);\n\n    const headers = {\n        \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Authorization': `Basic ${basicAuth}`,\n      };\n\n\nexport default class Restaurant extends Component {\n    \n    \n\n\n    constructor(props){\n        super(props);\n            this.state ={\n                pedido: [{}]\n            }\n\n\n        axios.get(constants.URI_PEDIDOS_RESTAURANTE+localStorage.getItem('idLoggedUser'), { headers })\n        .then(res => {\n            \n            this.setState({ pedido:  res.data.items });\n    \n        });    \n            \n    }\n\n\n    submitPedido(e){\n        e.preventDefault();\n        alert(JSON.stringify(this.state.pedido[e.target.value].id));\n        \n         const novoObjetoJSON = {\n            \"idPedido\": this.state.pedido[e.target.value].id+\"\"\n            \n            \n          };\n\n          axios.post(constants.URI_CANCELA_PEDIDO, novoObjetoJSON, { headers })\n            .then((response) => {\n                console.log('Resposta da solicitação POST:', response.data);\n                alert('Pedido cancelado com sucesso.');\n                window.location.href = \"/home\";\n            })\n            .catch((error) => {\n                console.error('Erro na solicitação POST:', error);\n            });   \n\n    }\n\n    render(){\n  return (\n<div className=\"center\">\n        <Menu/>\n        <Container>\n            <Row>\n                <Col md={{ span: 12, offset: 0 }}>\n                    {this.state.pedido.map((pedido,index) =>{\n                        \n                            return (\n                                <Card key={index} className=\"mb-3\">\n                                <Card.Body>\n                                  <Card.Title>Pedido: {pedido.id}</Card.Title>\n                                  <Card.Text>\n                                    <b>Cliente:</b> {pedido.nomecliente}\n                                    <br />\n                                    <b>Prato:</b> {pedido.nome}\n                                    <br/>\n                                    <b>Valor:</b> {pedido.preco}\n                                    <br />\n                                    <b>Data:</b> {pedido.data_prato}\n                                    <br/>\n                                    <b>Status:</b> {pedido.status}\n                                  </Card.Text>\n                                  <Card.Text>\n                                    \n                                    \n                                  </Card.Text>\n\n                                  {((pedido.status == \"Aguardando análise\") || pedido.status =='' ) && (\n                                  <Button style={{backgroundColor:\"#FF0000\"}}\n                                    variant=\"primary\"\n                                    \n                                    value={index}\n                                    onClick={this.submitPedido.bind(this)}\n                                  >\n                                    Cancelar Pedido\n                                  </Button>\n\n                                  \n                                  )}\n                                </Card.Body>\n                              </Card>\n             \n                            )\n                        } \n                    )}\n                </Col>\n            </Row>\n        </Container>\n</div>\n  );\n}\n}\n"]},"metadata":{},"sourceType":"module"}