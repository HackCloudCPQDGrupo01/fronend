{"ast":null,"code":"var _jsxFileName = \"/l/disk0/raphaelg/Downloads/HACKACLOUD/git/grupo01/fronend/src/pages/cadastroPratro.js\";\nimport Menu from './menu.js';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport '../css/cprato.css';\nimport '../css/index.css';\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport * as constants from './constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Food extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nome: '',\n      descricao: '',\n      restaurante: '',\n      tempoparapreparo: '',\n      preco: '',\n      restaurantes: []\n    };\n    axios.get(constants.URI_CADASTRO_RESTAURANTE).then(res => {\n      this.setState({\n        restaurantes: res.data.items\n      });\n    });\n    this.verificaModoEdicao();\n  }\n\n  changeField(field, event) {\n    let _filed = event.target.value;\n    this.setState(prevState => {\n      let nextState = Object.assign({}, prevState);\n      nextState[field] = _filed;\n      return nextState;\n    });\n  }\n\n  submitForm(e) {\n    e.preventDefault(); //alert(JSON.stringify(this.state));\n\n    const response = axios.post(constants.URI_CADASTRO_PRATO, this.state).then(res => {\n      alert('Registro inserido com sucesso');\n      console.log(res.data);\n      window.location.href = \"/home\";\n    });\n  }\n\n  verificaModoEdicao() {\n    // Verifique se há um parâmetro 'id' na URL e, se houver, carregue os dados do prato para edição\n    // Acessa a query string completa\n    const queryString = this.props.location.search; // Use URLSearchParams para analisar a query string\n\n    const params = new URLSearchParams(queryString); // Recupera o valor de um parâmetro específico (substitua 'paramName' pelo nome do seu parâmetro)\n\n    const id = params.get('id'); //            alert(JSON.stringify(id));\n\n    if (id) {\n      // Faça uma requisição para obter os dados do prato com o ID especificado\n      axios.get(constants.URI_CADASTRO_PRATO + `${id}`).then(res => {\n        const prato = res.data; // Atualize o estado com os dados do prato para edição\n\n        this.setState({\n          nome: prato.nome,\n          descricao: prato.descricao,\n          restaurante: prato.restaurante,\n          tempoparapreparo: prato.tempoparapreparo,\n          acompanhamento: prato.acompanhamento,\n          preco: prato.preco,\n          url: prato.url\n        });\n      }).catch(error => {\n        alert('Falha ao buscar os dados do id da URL');\n        console.error('Erro ao obter dados do prato:', error);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: {\n              span: 6,\n              offset: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: this.submitForm.bind(this),\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formGridNome\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: \"details-form\",\n                  children: \"Nome do Prato\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  className: \"font-forms\",\n                  type: \"text\",\n                  placeholder: \"Informe o email\",\n                  value: this.state.nome,\n                  onChange: this.changeField.bind(this, 'nome')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formGridDescricao\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: \"details-form\",\n                  children: \"Descri\\xE7\\xE3o do prato\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"textarea\",\n                  rows: 3,\n                  className: \"font-forms\",\n                  placeholder: \"Informe o descritivo do prato\",\n                  value: this.state.descricao,\n                  onChange: this.changeField.bind(this, 'descricao')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"formGridendereco\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    className: \"details-form\",\n                    children: \"Restaurante\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    className: \"font-forms select-forms\",\n                    placeholder: \"Informe o endere\\xE7o\",\n                    value: this.state.restaurante,\n                    onChange: this.changeField.bind(this, 'restaurante'),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Selecione\"\n                    }, \"\", false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 126,\n                      columnNumber: 33\n                    }, this), this.state.restaurantes.map(data => {\n                      if (data.id == localStorage.getItem('idLoggedUser')) {\n                        return /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: data.id,\n                          children: data.nome\n                        }, data.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 131,\n                          columnNumber: 37\n                        }, this);\n                      }\n\n                      return null; // Ignora outras opções\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"formGridPreco\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    className: \"details-form\",\n                    children: \"Pre\\xE7o do prato\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    className: \"font-forms\",\n                    placeholder: \"Informe o pre\\xE7o do prato\",\n                    value: this.state.preco,\n                    onChange: this.changeField.bind(this, 'preco')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"formGridtempoParaPreparo\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    className: \"details-form\",\n                    children: \"Tempo para preparo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    className: \"font-forms\",\n                    placeholder: \"Informe o tempo medio para preparar o pedido\",\n                    value: this.state.tempoparapreparo,\n                    onChange: this.changeField.bind(this, 'tempoparapreparo')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"danger\",\n                type: \"submit\",\n                children: \"Cadastrar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 1\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/l/disk0/raphaelg/Downloads/HACKACLOUD/git/grupo01/fronend/src/pages/cadastroPratro.js"],"names":["Menu","Form","Button","Container","Row","Col","React","Component","axios","constants","Food","constructor","props","state","nome","descricao","restaurante","tempoparapreparo","preco","restaurantes","get","URI_CADASTRO_RESTAURANTE","then","res","setState","data","items","verificaModoEdicao","changeField","field","event","_filed","target","value","prevState","nextState","Object","assign","submitForm","e","preventDefault","response","post","URI_CADASTRO_PRATO","alert","console","log","window","location","href","queryString","search","params","URLSearchParams","id","prato","acompanhamento","url","catch","error","render","span","offset","bind","map","localStorage","getItem"],"mappings":"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","sourcesContent":["import Menu from './menu.js';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport '../css/cprato.css';\nimport '../css/index.css';\nimport React,{Component} from 'react';\nimport axios from \"axios\";\nimport * as constants from './constants';\n\n\n\nexport default class Food extends Component {\n    \n    \n\n    constructor(props){\n        super(props);\n            this.state ={\n                nome: '',\n                descricao: '',\n                restaurante:'',\n                tempoparapreparo:'',\n                preco:'',\n                restaurantes: []\n            }\n\n            axios.get(constants.URI_CADASTRO_RESTAURANTE)\n            .then(res => {\n             \n              this.setState({ restaurantes:  res.data.items });\n      \n            });\n\n            this.verificaModoEdicao();\n\n        }\n\n        changeField(field,event){\n            let _filed = event.target.value;\n            this.setState(prevState => {\n                let nextState = Object.assign({},prevState);\n                nextState[field] = _filed;\n                return nextState;\n            })\n        }\n\n        submitForm(e) {\n            e.preventDefault();\n            //alert(JSON.stringify(this.state));\n\n            const response = axios.post(constants.URI_CADASTRO_PRATO, this.state).then(res => {\n                alert('Registro inserido com sucesso');\n                console.log(res.data);\n                window.location.href = \"/home\";\n            });\n        }\n\n\n        verificaModoEdicao() {\n            // Verifique se há um parâmetro 'id' na URL e, se houver, carregue os dados do prato para edição\n            \n            // Acessa a query string completa\n            const queryString = this.props.location.search;\n\n            // Use URLSearchParams para analisar a query string\n            const params = new URLSearchParams(queryString);\n\n            // Recupera o valor de um parâmetro específico (substitua 'paramName' pelo nome do seu parâmetro)\n            const id = params.get('id');\n            \n//            alert(JSON.stringify(id));\n            if (id) {\n                \n              // Faça uma requisição para obter os dados do prato com o ID especificado\n              axios.get(constants.URI_CADASTRO_PRATO + `${id}`)\n                .then((res) => {\n                  const prato = res.data;\n\n                  // Atualize o estado com os dados do prato para edição\n                  this.setState({\n                    nome: prato.nome,\n                    descricao: prato.descricao,\n                    restaurante: prato.restaurante,\n                    tempoparapreparo: prato.tempoparapreparo,\n                    acompanhamento: prato.acompanhamento,\n                    preco: prato.preco,\n                    url: prato.url,\n                  });\n                })\n                .catch((error) => {\n                  alert('Falha ao buscar os dados do id da URL');\n                  console.error('Erro ao obter dados do prato:', error);\n                });\n            }\n          }    \n\n\n\n    render(){\n  return (\n<div className=\"center\">\n\n\n\n        <Menu/>\n        <Container>\n            <Row>\n                <Col md={{ span: 6, offset: 3 }}>\n                    <Form onSubmit={this.submitForm.bind(this)}>\n                            <Form.Group controlId=\"formGridNome\">\n                            <Form.Label className=\"details-form\">Nome do Prato</Form.Label>\n                            <Form.Control  className=\"font-forms\" type=\"text\" placeholder=\"Informe o email\" value={this.state.nome} onChange={this.changeField.bind(this,'nome')} />\n                            </Form.Group>\n\n                        <Form.Group controlId=\"formGridDescricao\">\n                            <Form.Label className=\"details-form\">Descrição do prato</Form.Label>\n                            <Form.Control  as=\"textarea\" rows={3} className=\"font-forms\" placeholder=\"Informe o descritivo do prato\" value={this.state.descricao} onChange={this.changeField.bind(this,'descricao')} />\n                        </Form.Group>\n                        <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridendereco\">\n                            <Form.Label className=\"details-form\">Restaurante</Form.Label>\n                            <Form.Control  as=\"select\"  className=\"font-forms select-forms\" placeholder=\"Informe o endereço\" value={this.state.restaurante} onChange={this.changeField.bind(this,'restaurante')} >\n                                <option key=\"\" value=\"\">Selecione</option>\n                                {this.state.restaurantes.map((data) => {\n                                    if (data.id == localStorage.getItem('idLoggedUser')) {\n                                    return (\n                                    \n                                    <option key={data.id} value={data.id}>\n                                    {data.nome}\n                                    </option>\n                               );\n                            }\n                            return null; // Ignora outras opções\n                          })}\n                                \n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group as={Col} controlId=\"formGridPreco\">\n                            <Form.Label className=\"details-form\">Preço do prato</Form.Label>\n                            <Form.Control  className=\"font-forms\" placeholder=\"Informe o preço do prato\" value={this.state.preco} onChange={this.changeField.bind(this,'preco')} />\n                        </Form.Group>\n                        </Form.Row>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formGridtempoParaPreparo\">\n                            <Form.Label className=\"details-form\">Tempo para preparo</Form.Label>\n                            <Form.Control  className=\"font-forms\" placeholder=\"Informe o tempo medio para preparar o pedido\" value={this.state.tempoparapreparo} onChange={this.changeField.bind(this,'tempoparapreparo')} />\n                            </Form.Group>\n\n     \n                        </Form.Row>\n\n                        <Button variant=\"danger\" type=\"submit\">\n                            Cadastrar\n                        </Button>\n                    </Form>\n                </Col>\n            </Row>\n        </Container>\n</div>\n  );\n}\n}\n"]},"metadata":{},"sourceType":"module"}